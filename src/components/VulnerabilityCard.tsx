import { AlertTriangle, ArrowRight, Shield, Terminal } from 'lucide-react';
import { Vulnerability } from '../types';

const severityColors = {
  Critical: 'bg-red-500',
  High: 'bg-orange-500',
  Medium: 'bg-yellow-500',
  Low: 'bg-blue-500'
};

export default function VulnerabilityCard({ vulnerability }: { vulnerability: Vulnerability }) {
  return (
    <div className="bg-gray-900 rounded-lg p-6 hover:ring-1 hover:ring-emerald-500 transition-all">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center space-x-2">
          <AlertTriangle className="h-5 w-5 text-emerald-500" />
          <h3 className="text-lg font-semibold text-white">{vulnerability.title}</h3>
        </div>
        <span className={`px-3 py-1 rounded-full text-sm ${severityColors[vulnerability.severity]} text-white`}>
          {vulnerability.severity}
        </span>
      </div>

      <div className="space-y-4">
        <div className="bg-black rounded-lg p-4">
          <div className="flex items-center space-x-2 mb-2">
            <Terminal className="h-4 w-4 text-gray-400" />
            <span className="text-sm text-gray-400">{vulnerability.location}</span>
          </div>
          <pre className="text-sm text-gray-300 overflow-x-auto">
            <code>{vulnerability.codeSnippet}</code>
          </pre>
        </div>

        <div className="text-gray-400 text-sm">
          <p><strong>Impact:</strong> {vulnerability.impact}</p>
          <p><strong>Detected:</strong> {vulnerability.detectedAt}</p>
        </div>

        {vulnerability.suggestedPatch && (
          <button className="w-full mt-4 bg-emerald-500 hover:bg-emerald-600 text-white rounded-lg px-4 py-2 flex items-center justify-center space-x-2 transition-colors">
            <Shield className="h-4 w-4" />
            <span>Apply Suggested Patch</span>
            <ArrowRight className="h-4 w-4" />
          </button>
        )}
      </div>
    </div>
  );
}